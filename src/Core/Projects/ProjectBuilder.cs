using NDifference.Framework;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NDifference.Projects
{
	public static class ProjectBuilder
	{
		public static Project Default()
		{
			Project defaultProject = new Project
			{
				Version = "1.0",
				Settings = DefaultSettings()
			};

			defaultProject.Product = new Product();
			defaultProject.Product.Add(new ProductIncrement());
			defaultProject.Product.Add(new ProductIncrement());

			return defaultProject;
		}

		public static Project FromFile(string path)
		{
			return ProjectReader.LoadFromFile(path);
		}

		public static ProjectSettings DefaultSettings()
		{
			var settings = new ProjectSettings
			{
				IndexName = "Summary",
				ConsolidateAssemblyTypes = false,
				ReportFormat = "html",
				SubFolder = "api_change",

				SummaryTitle = "API Differences Report",
				HeadingText = "This report details changes in the public API. It shows additions, modifications and removals of assemblies between the two versions. The links on this page detail which types have been added, removed or changed in each assembly.",

				OutputFolder = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)
			};

			settings.FooterText = String.Format(CultureInfo.CurrentCulture, 
				"<div id=\"footer\"><p>Generated by <a href=\"{0}\">{1} {2}</a> {3} {4}</p></div>",
				settings.ApplicationLink,
				settings.ApplicationName,
				settings.ApplicationVersion,
				DateTime.Now.ToLongDateString(),
				DateTime.Now.ToLongTimeString());

			// classic styling...
			var styleBuilder = new StringBuilder();

			styleBuilder.AppendLine("<style>");
			styleBuilder.AppendLine("html,body,div,h1,h2,h3,h4,h5,h6,p,img,dl,dt,dd,ol,ul,li,table,caption,tbody,tfoot,thead,tr,th,td,form,fieldset,embed,object,applet { margin: 0; padding: 0; border: 0; }");

			styleBuilder.AppendLine("html, body { background-color:#fff; }");
			styleBuilder.AppendLine("body { font-family:helvetica,arial,sans-serif; font-size:13px; color:#333; padding: 1em; }");

			styleBuilder.AppendLine("header { margin-bottom: 0; }");
			styleBuilder.AppendLine("header > hgroup { background-color: #3c8dc5; color:#fff; padding: 1em; }");

			styleBuilder.AppendLine("section > p, nav { padding: 1em; color: #fff; background-color: #6fb7e9}");
			styleBuilder.AppendLine("section, nav { margin-bottom: 2em; }");

			styleBuilder.AppendLine("article { padding: 1em; }");

			styleBuilder.AppendLine("table { border-collapse:collapse; border-width:0; empty-cells:show; font-size:1em; margin:0 0 1em; padding:0; width: 100%; }");
			styleBuilder.AppendLine("th, td { border: 1px solid #ccc; padding:6px 12px; text-align:left; vertical-align:top; background-color:inherit; }");
			styleBuilder.AppendLine("th { background-color: #b2d1e5; }");
			styleBuilder.AppendLine("td > p:last-child { margin:0; }");
			styleBuilder.AppendLine(".even { background-color: #e9f2f9; }");
			styleBuilder.AppendLine("caption { display: none; }");
			styleBuilder.AppendLine("code { font-family: consolas, courier, monospace; }");

			styleBuilder.AppendLine("a:link { color: #3c8dc5; text-decoration: none; }");
			styleBuilder.AppendLine("a:visited { color: #3c8dc5; }");
			styleBuilder.AppendLine("a:hover { text-decoration:underline; }");
			styleBuilder.AppendLine("a:active { text-decoration:underline; }");

			styleBuilder.AppendLine("footer > p { text-align: center; }");
			styleBuilder.AppendLine("footer { border-top: 1px solid #ccc; background-color: #eee; padding: 0 1em 2em 0; }");

			styleBuilder.AppendLine("nav { margin: 0; }");
			styleBuilder.AppendLine("nav a:link, nav a:visited { color: #fff; }");
			styleBuilder.AppendLine("ul, li { display: inline; margin-right: 0.5em; }");

			styleBuilder.AppendLine("footer > nav { background-color: #eee; color: #3c8dc5; }");
			styleBuilder.AppendLine("footer > nav a:link, footer > nav a:visited { color: #3c8dc5; }");

			styleBuilder.AppendLine(".kw { color: #00f; margin-left: 0.2em; margin-right: 0.2em; }");
			styleBuilder.AppendLine(".tn { color: #2b91af; padding-left: 0.2em; padding-right: 0.2em; }");
			styleBuilder.AppendLine(".punc { color: black; }");
			styleBuilder.AppendLine(".ident { color: black; padding-left: 0.2em; padding-right: 0.2em; }");
			styleBuilder.AppendLine("</style>");

			settings.StyleTag = styleBuilder.ToString();

			var ignoreList = new List<string>();

			//ignoreList.Add("ACI001");
			//ignoreList.Add("ACI002");
			//ignoreList.Add("ACI003");

			//ignoreList.Add("AI001");

			//ignoreList.Add("TCI001");
			//ignoreList.Add("TCI002");
			//ignoreList.Add("TCI003");
			//ignoreList.Add("TCI004");
			//ignoreList.Add("TCI005");

			//ignoreList.Add("TI00DEMO");
			//ignoreList.Add("TI00SEC");
			//ignoreList.Add("TI001");
			//ignoreList.Add("TI004");
			//ignoreList.Add("TI005");

			// finalizers
			//ignoreList.Add("TI006");
			//ignoreList.Add("TI007");

			settings.IgnoreInspectors = String.Join(";", ignoreList);
			
			return settings;
		}
	}
}
