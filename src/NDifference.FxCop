<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/Core/bin/Debug/NDifference.Core.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/Reflection/bin/Debug/NDifference.Reflection.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="AbstractTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="AvoidEmptyInterfaces" Enabled="True" />
    <Rule Name="AvoidExcessiveParametersOnGenericTypes" Enabled="True" />
    <Rule Name="AvoidNamespacesWithFewTypes" Enabled="True" />
    <Rule Name="AvoidOutParameters" Enabled="True" />
    <Rule Name="CollectionsShouldImplementGenericInterface" Enabled="True" />
    <Rule Name="ConsiderPassingBaseTypesAsParameters" Enabled="True" />
    <Rule Name="DeclareEventHandlersCorrectly" Enabled="True" />
    <Rule Name="DeclareTypesInNamespaces" Enabled="True" />
    <Rule Name="DefaultParametersShouldNotBeUsed" Enabled="True" />
    <Rule Name="DefineAccessorsForAttributeArguments" Enabled="True" />
    <Rule Name="DoNotCatchGeneralExceptionTypes" Enabled="True" />
    <Rule Name="DoNotDeclareProtectedMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareStaticMembersOnGenericTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVirtualMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVisibleInstanceFields" Enabled="True" />
    <Rule Name="DoNotExposeGenericLists" Enabled="True" />
    <Rule Name="DoNotHideBaseClassMethods" Enabled="True" />
    <Rule Name="DoNotNestGenericTypesInMemberSignatures" Enabled="True" />
    <Rule Name="DoNotOverloadOperatorEqualsOnReferenceTypes" Enabled="True" />
    <Rule Name="DoNotPassTypesByReference" Enabled="True" />
    <Rule Name="DoNotRaiseExceptionsInUnexpectedLocations" Enabled="True" />
    <Rule Name="EnumeratorsShouldBeStronglyTyped" Enabled="True" />
    <Rule Name="EnumsShouldHaveZeroValue" Enabled="True" />
    <Rule Name="EnumStorageShouldBeInt32" Enabled="True" />
    <Rule Name="ExceptionsShouldBePublic" Enabled="True" />
    <Rule Name="GenericMethodsShouldProvideTypeParameter" Enabled="True" />
    <Rule Name="ICollectionImplementationsHaveStronglyTypedMembers" Enabled="True" />
    <Rule Name="ImplementIDisposableCorrectly" Enabled="True" />
    <Rule Name="ImplementStandardExceptionConstructors" Enabled="True" />
    <Rule Name="IndexersShouldNotBeMultidimensional" Enabled="True" />
    <Rule Name="InterfaceMethodsShouldBeCallableByChildTypes" Enabled="True" />
    <Rule Name="ListsAreStronglyTyped" Enabled="True" />
    <Rule Name="MarkAssembliesWithAssemblyVersion" Enabled="True" />
    <Rule Name="MarkAssembliesWithComVisible" Enabled="True" />
    <Rule Name="MarkAttributesWithAttributeUsage" Enabled="True" />
    <Rule Name="MarkEnumsWithFlags" Enabled="True" />
    <Rule Name="MembersShouldNotExposeCertainConcreteTypes" Enabled="True" />
    <Rule Name="MovePInvokesToNativeMethodsClass" Enabled="True" />
    <Rule Name="NestedTypesShouldNotBeVisible" Enabled="True" />
    <Rule Name="OverloadOperatorEqualsOnOverloadingAddAndSubtract" Enabled="True" />
    <Rule Name="OverrideMethodsOnComparableTypes" Enabled="True" />
    <Rule Name="PropertiesShouldNotBeWriteOnly" Enabled="True" />
    <Rule Name="ProvideObsoleteAttributeMessage" Enabled="True" />
    <Rule Name="ReplaceRepetitiveArgumentsWithParamsArray" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldBeSealed" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="StringUriOverloadsCallSystemUriOverloads" Enabled="True" />
    <Rule Name="TypesShouldNotExtendCertainBaseTypes" Enabled="True" />
    <Rule Name="TypesThatOwnDisposableFieldsShouldBeDisposable" Enabled="True" />
    <Rule Name="TypesThatOwnNativeResourcesShouldBeDisposable" Enabled="True" />
    <Rule Name="UriParametersShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriPropertiesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriReturnValuesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UseEventsWhereAppropriate" Enabled="True" />
    <Rule Name="UseGenericEventHandlerInstances" Enabled="True" />
    <Rule Name="UseGenericsWhereAppropriate" Enabled="True" />
    <Rule Name="UseIntegralOrStringArgumentForIndexers" Enabled="True" />
    <Rule Name="UsePropertiesWhereAppropriate" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainTypeNames" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
    <Rule Name="UsePreferredTerms" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Namespaces>
   <Namespace Name="NDifference.Framework">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2014-06-09 15:20:29Z">
      <Issue>
       <Item>NDifference.Framework</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="NDifference.Inspection">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2014-06-09 15:20:29Z">
      <Issue>
       <Item>NDifference.Inspection</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/Core/bin/Debug/NDifference.Core.dll">
    <Modules>
     <Module Name="ndifference.core.dll">
      <Namespaces>
       <Namespace Name="NDifference">
        <Types>
         <Type Name="AssemblyDiskInfoBuilder">
          <Messages>
           <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Created="2014-06-09 15:28:56Z">
            <Issue>
             <Item>'AssemblyDiskInfoBuilder'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="AssemblyNameComparer">
          <Members>
           <Member Name="#IsExactMatch(System.String,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2014-06-09 15:20:29Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'AssemblyNameComparer.IsExactMatch(string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Delta`2">
          <Messages>
           <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Created="2014-06-09 15:20:29Z" FixCategory="NonBreaking">
            <Issue Name="TypeTypeParameter">
             <Item>'Delta&lt;T, U&gt;'</Item>
             <Item>'U'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CandidateChanges">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'Delta&lt;T, U&gt;.CandidateChanges'</Item>
               <Item>'Collection&lt;Pair&lt;U&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DeltaBuilder`1">
          <Members>
           <Member Name="#Build(System.Collections.Generic.IEnumerable`1&lt;!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!0&gt;,System.Collections.Generic.IEqualityComparer`1&lt;!0&gt;)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'DeltaBuilder&lt;T&gt;.Build(IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)'</Item>
               <Item>'DeltaBuilder&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="HashAlgorithmExtensions">
          <Members>
           <Member Name="#GetHash`1(System.Object)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'HashAlgorithmExtensions.GetHash&lt;T&gt;(this object)'</Item>
               <Item>'T'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToHex(System.Byte[])">
            <Messages>
             <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'byte.ToString(string)'</Item>
               <Item>'HashAlgorithmExtensions.ToHex(byte[])'</Item>
               <Item>'byte.ToString(string, IFormatProvider)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAssemblyDiskInfo">
          <Members>
           <Member Name="#Date">
            <Messages>
             <Message Id="Date" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2014-06-09 15:20:29Z">
              <Issue Name="Member">
               <Item>'IAssemblyDiskInfo.Date'</Item>
               <Item>Date</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAssemblyReflector">
          <Members>
           <Member Name="#GetAssemblyInfo()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2014-06-09 15:20:29Z">
              <Issue Certainty="50">
               <Item>'IAssemblyReflector.GetAssemblyInfo()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypes(NDifference.AssemblyReflectionOption)">
            <Messages>
             <Message Id="Option" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2014-04-30 15:24:07Z">
              <Issue Name="MemberParameter">
               <Item>'IAssemblyReflector.GetTypes(AssemblyReflectionOption)'</Item>
               <Item>'option'</Item>
               <Item>Option</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Pair`1">
          <Members>
           <Member Name="#MakePair(!0,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'Pair&lt;T&gt;.MakePair(T, T)'</Item>
               <Item>'Pair&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.Analysis">
        <Types>
         <Type Name="AnalysisWorkflow">
          <Members>
           <Member Name="#Analyse(NDifference.Projects.Project)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
             <Message Id="commonType" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'commonType'</Item>
               <Item>'IdentifiedChange'</Item>
              </Issue>
             </Message>
             <Message Id="dllOutput" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'dllOutput'</Item>
               <Item>'IReportOutput'</Item>
              </Issue>
             </Message>
             <Message Id="ti" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'ti'</Item>
               <Item>'ITypeInspector'</Item>
              </Issue>
             </Message>
             <Message Id="typeChanges" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'typeChanges'</Item>
               <Item>'IdentifiedChangeCollection'</Item>
              </Issue>
             </Message>
             <Message Id="typesIn1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'typesIn1'</Item>
               <Item>'IEnumerable&lt;ITypeInfo&gt;'</Item>
              </Issue>
             </Message>
             <Message Id="typesIn2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'AnalysisWorkflow.Analyse(Project)'</Item>
               <Item>'typesIn2'</Item>
               <Item>'IEnumerable&lt;ITypeInfo&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CategoryPriority">
          <Members>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'int.ToString()'</Item>
               <Item>'CategoryPriority.ToString()'</Item>
               <Item>'int.ToString(IFormatProvider)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAnalysisWorkflow">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2014-06-09 15:20:29Z">
            <Issue>
             <Item>'IAnalysisWorkflow'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IdentifiedChangeCollection">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2014-06-09 15:20:29Z">
            <Issue Name="TypeNoAlternate">
             <Item>'IdentifiedChangeCollection'</Item>
             <Item>Collection</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Changes">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;IdentifiedChange&gt;'</Item>
               <Item>'IdentifiedChangeCollection.Changes'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ChangesInCategory(System.Int32)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;IdentifiedChange&gt;'</Item>
               <Item>'IdentifiedChangeCollection.ChangesInCategory(int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FooterBlocks">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'IdentifiedChangeCollection.FooterBlocks'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MetaBlocks">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'IdentifiedChangeCollection.MetaBlocks'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UnCategorisedChanges()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;IdentifiedChange&gt;'</Item>
               <Item>'IdentifiedChangeCollection.UnCategorisedChanges()'</Item>
              </Issue>
             </Message>
             <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-06-09 15:20:29Z">
              <Issue Name="Member">
               <Item>Un</Item>
               <Item>'IdentifiedChangeCollection.UnCategorisedChanges()'</Item>
               <Item>UN</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.Inspection">
        <Types>
         <Type Name="WellKnownChangePriorities">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'WellKnownChangePriorities.WellKnownChangePriorities()'</Item>
               <Item>'WellKnownChangePriorities.AssemblyInternal'</Item>
               <Item>'int'</Item>
               <Item>0</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.Plugins">
        <Types>
         <Type Name="ObjectInstantiator`1">
          <Members>
           <Member Name="#CreateTypesImplementingInterface(NDifference.IAssemblyReflector)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;T&gt;'</Item>
               <Item>'ObjectInstantiator&lt;T&gt;.CreateTypesImplementingInterface(IAssemblyReflector)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PluginDiscoverer`1">
          <Messages>
           <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Created="2014-06-09 15:20:29Z">
            <Issue>
             <Item>'PluginDiscoverer&lt;T&gt;'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Find()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;T&gt;'</Item>
               <Item>'PluginDiscoverer&lt;T&gt;.Find()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.Projects">
        <Types>
         <Type Name="PersistableProject">
          <Members>
           <Member Name="#SourceAssemblies">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'PersistableProject.SourceAssemblies'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'PersistableProject.SourceAssemblies'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TargetAssemblies">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'PersistableProject.TargetAssemblies'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'PersistableProject.TargetAssemblies'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PersistableProjectSettings">
          <Members>
           <Member Name="#FooterTextAsCData">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2014-06-09 15:20:29Z">
              <Issue Name="Xml">
               <Item>'PersistableProjectSettings.FooterTextAsCData'</Item>
               <Item>'XmlCDataSection'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#HeadingTextAsCData">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2014-06-09 15:20:29Z">
              <Issue Name="Xml">
               <Item>'PersistableProjectSettings.HeadingTextAsCData'</Item>
               <Item>'XmlCDataSection'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#HeadTagAsCData">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2014-06-09 15:20:29Z">
              <Issue Name="Xml">
               <Item>'PersistableProjectSettings.HeadTagAsCData'</Item>
               <Item>'XmlCDataSection'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#StyleTagAsCData">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2014-06-09 15:20:29Z">
              <Issue Name="Xml">
               <Item>'PersistableProjectSettings.StyleTagAsCData'</Item>
               <Item>'XmlCDataSection'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ProjectSettings">
          <Members>
           <Member Name="#AutogenerateDateTimeText()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'ProjectSettings.AutogenerateDateTimeText()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubFolder">
            <Messages>
             <Message Id="SubFolder" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-06-09 15:20:29Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>SubFolder</Item>
               <Item>'ProjectSettings.SubFolder'</Item>
               <Item>Subfolder</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubPath">
            <Messages>
             <Message Id="SubPath" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-06-09 15:20:29Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>SubPath</Item>
               <Item>'ProjectSettings.SubPath'</Item>
               <Item>Subpath</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.Reporting">
        <Types>
         <Type Name="IDocumentLink">
          <Members>
           <Member Name="#LinkUrl">
            <Messages>
             <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'IDocumentLink.LinkUrl'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="NDifference.TypeSystem">
        <Types>
         <Type Name="FieldDeclaration">
          <Members>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2014-06-09 15:20:29Z" FixCategory="NonBreaking">
              <Issue Name="BaseType">
               <Item>'FieldDeclaration.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FullyQualifiedName">
          <Messages>
           <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Created="2014-06-09 15:20:29Z">
            <Issue Name="Operator">
             <Item>'FullyQualifiedName'</Item>
             <Item>&lt;</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>'FullyQualifiedName'</Item>
             <Item>&gt;</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CompareTo(NDifference.TypeSystem.FullyQualifiedName)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'FullyQualifiedName.CompareTo(FullyQualifiedName)'</Item>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Equals(System.Object)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'FullyQualifiedName.Equals(object)'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'FullyQualifiedName.Equals(object)'</Item>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2014-06-09 15:20:29Z" FixCategory="NonBreaking">
              <Issue Name="BaseType">
               <Item>'FullyQualifiedName.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ITypeInfo">
          <Members>
           <Member Name="#Namespace">
            <Messages>
             <Message Id="Namespace" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2014-06-09 15:20:29Z">
              <Issue Name="Member">
               <Item>'ITypeInfo.Namespace'</Item>
               <Item>Namespace</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Namespace">
          <Messages>
           <Message Id="Namespace" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2014-06-09 15:20:29Z">
            <Issue Name="Type">
             <Item>'Namespace'</Item>
             <Item>Namespace</Item>
            </Issue>
           </Message>
           <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Created="2014-06-09 15:20:29Z">
            <Issue Name="Operator">
             <Item>'Namespace'</Item>
             <Item>&lt;</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>'Namespace'</Item>
             <Item>&gt;</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CompareTo(NDifference.TypeSystem.Namespace)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'Namespace.CompareTo(Namespace)'</Item>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Addition(NDifference.TypeSystem.Namespace,NDifference.TypeSystem.TypeName)">
            <Messages>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>Add</Item>
               <Item>'Namespace.operator +(Namespace, TypeName)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Namespace.operator +(Namespace, TypeName)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyDeclaration">
          <Members>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2014-06-09 15:20:29Z" FixCategory="NonBreaking">
              <Issue Name="BaseType">
               <Item>'PropertyDeclaration.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SignatureOverloadResolver">
          <Members>
           <Member Name="#FindBestMatch(NDifference.TypeSystem.Signature,System.Collections.Generic.IEnumerable`1&lt;NDifference.TypeSystem.Signature&gt;)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-06-09 15:20:29Z">
              <Issue Name="TooGeneric">
               <Item>'SignatureOverloadResolver.FindBestMatch(Signature, IEnumerable&lt;Signature&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2014-06-09 15:20:29Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'SignatureOverloadResolver.FindBestMatch(Signature, IEnumerable&lt;Signature&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeName">
          <Messages>
           <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Created="2014-06-09 15:20:29Z">
            <Issue Name="Operator">
             <Item>'TypeName'</Item>
             <Item>&lt;</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>'TypeName'</Item>
             <Item>&gt;</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CompareTo(NDifference.TypeSystem.TypeName)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'TypeName.CompareTo(TypeName)'</Item>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeNameComparer">
          <Members>
           <Member Name="#Equals(NDifference.TypeSystem.ITypeInfo,NDifference.TypeSystem.ITypeInfo)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'TypeNameComparer.Equals(ITypeInfo, ITypeInfo)'</Item>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/Reflection/bin/Debug/NDifference.Reflection.dll">
    <Modules>
     <Module Name="ndifference.reflection.dll">
      <Namespaces>
       <Namespace Name="NDifference.Reflection">
        <Types>
         <Type Name="CecilExtensionMethods">
          <Members>
           <Member Name="#IsInternalType(Mono.Cecil.TypeDefinition)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2014-06-09 15:20:29Z">
              <Issue>
               <Item>'CecilExtensionMethods.IsInternalType(this TypeDefinition)'</Item>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'CecilExtensionMethods.IsInternalType(this TypeDefinition)'</Item>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
    <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   </Rule>
   <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
    <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   </Rule>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
    <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
    <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   </Rule>
   <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
    <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   </Rule>
   <Rule TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805">
    <Resolution Name="Default">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>
   </Rule>
   <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
    <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
    <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
    <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
    <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
    <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
    <Resolution Name="MemberParameter">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
    <Resolution Name="Type">Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
    <Resolution Name="Xml">Modify member {0} so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent XML data sources.</Resolution>
   </Rule>
   <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
    <Resolution Name="Default">Provide a method named '{0}' as a friendly alternate for operator {1}.</Resolution>
   </Rule>
   <Rule TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036">
    <Resolution Name="Operator">{0} should define operator '{1}' since it implements IComparable.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   </Rule>
   <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
    <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a StringComparison. This should be replaced with a call to {2}.</Resolution>
   </Rule>
   <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
    <Resolution Name="Default">Remove the public constructors from {0}.</Resolution>
   </Rule>
   <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
    <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
